---
export interface Props {
  title: string;
  url: string;
  description?: string;
  image?: string;
  platforms?: string[];
}

const { 
  title, 
  url, 
  description = "Check out this amazing content from EA Soft Lab!", 
  image = "/og-image.jpg",
  platforms = ["twitter", "linkedin", "facebook", "email"]
} = Astro.props;

const encodedUrl = encodeURIComponent(url);
const encodedTitle = encodeURIComponent(title);
const encodedDescription = encodeURIComponent(description);
const encodedImage = encodeURIComponent(image);

const shareUrls = {
  twitter: `https://twitter.com/intent/tweet?text=${encodedTitle}&url=${encodedUrl}`,
  linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${encodedUrl}`,
  facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`,
  email: `mailto:?subject=${encodedTitle}&body=${encodedDescription}%20${encodedUrl}`
};

const platformIcons = {
  twitter: "M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z",
  linkedin: "M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z M2 9h4v12H2z M4 2a2 2 0 1 1-2 2 2 2 0 0 1 2-2z",
  facebook: "M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z",
  email: "M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z M22 6l-10 7L2 6"
};
---

<div class="flex items-center space-x-4">
  <span class="text-sm font-medium text-gray-700">Share:</span>
  <div class="flex space-x-2">
    {platforms.map((platform) => (
      <a
        href={shareUrls[platform]}
        target="_blank"
        rel="noopener noreferrer"
        class="p-2 text-gray-600 hover:text-primary-600 hover:bg-primary-50 rounded-full transition-colors duration-200"
        title={`Share on ${platform.charAt(0).toUpperCase() + platform.slice(1)}`}
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={platformIcons[platform]} />
        </svg>
      </a>
    ))}
  </div>
</div>

<script>
  // Track social sharing clicks
  document.addEventListener('DOMContentLoaded', () => {
    const shareButtons = document.querySelectorAll('[href*="intent/tweet"], [href*="sharer"], [href*="mailto:"]');
    
    shareButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        const platform = e.currentTarget.href.includes('twitter') ? 'twitter' :
                        e.currentTarget.href.includes('linkedin') ? 'linkedin' :
                        e.currentTarget.href.includes('facebook') ? 'facebook' : 'email';
        
        // Track in analytics
        if (typeof gtag !== 'undefined') {
          gtag('event', 'share', {
            method: platform,
            content_type: 'page',
            item_id: window.location.pathname
          });
        }
      });
    });
  });
</script> 