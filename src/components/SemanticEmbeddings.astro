---
export interface Props {
  content: {
    title: string;
    text: string;
    keywords: string[];
    category: string;
    semanticTags: string[];
    aiOptimized: boolean;
  }[];
  title?: string;
  showSemanticAnalysis?: boolean;
  enableAIProcessing?: boolean;
}

const {
  content,
  title = "Semantic Content Analysis",
  showSemanticAnalysis = true,
  enableAIProcessing = true
} = Astro.props;

// Generate semantic analysis data
const semanticAnalysis = content.map(item => ({
  ...item,
  semanticScore: Math.random() * 0.4 + 0.6, // Simulated semantic relevance score
  intentMatch: Math.random() * 0.3 + 0.7, // Simulated intent matching score
  aiReadability: Math.random() * 0.2 + 0.8 // Simulated AI readability score
}));

// Generate semantic schema for AI search
const semanticSchema = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "name": title,
  "description": "AI-optimized semantic content with structured data for search engines",
  "itemListElement": semanticAnalysis.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "item": {
      "@type": "Article",
      "name": item.title,
      "text": item.text,
      "keywords": item.keywords.join(", "),
      "about": item.semanticTags,
      "genre": item.category
    }
  }))
};
---

<div class="semantic-embeddings bg-white rounded-lg shadow-lg p-6">
  <div class="flex items-center justify-between mb-6">
    <h3 class="text-xl font-semibold text-gray-900">{title}</h3>
    {enableAIProcessing && (
      <div class="flex items-center space-x-2">
        <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
        <span class="text-sm text-green-600 font-medium">AI Processing Active</span>
      </div>
    )}
  </div>

  <div class="space-y-6">
    {semanticAnalysis.map((item, index) => (
      <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow duration-200">
        <div class="flex items-start justify-between mb-3">
          <div class="flex-1">
            <h4 class="text-lg font-semibold text-gray-900 mb-2">{item.title}</h4>
            <p class="text-gray-700 text-sm leading-relaxed mb-3">{item.text}</p>
            
            <div class="flex flex-wrap gap-2 mb-3">
              {item.keywords.map((keyword) => (
                <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-xs">
                  {keyword}
                </span>
              ))}
            </div>
            
            <div class="flex flex-wrap gap-2">
              {item.semanticTags.map((tag) => (
                <span class="bg-purple-100 text-purple-800 px-2 py-1 rounded text-xs">
                  {tag}
                </span>
              ))}
            </div>
          </div>
          
          {showSemanticAnalysis && (
            <div class="ml-4 text-right">
              <div class="space-y-2">
                <div class="text-xs">
                  <span class="text-gray-500">Semantic Score:</span>
                  <div class="w-20 bg-gray-200 rounded-full h-2 mt-1">
                    <div 
                      class="bg-blue-600 h-2 rounded-full" 
                      style={`width: ${item.semanticScore * 100}%`}
                    ></div>
                  </div>
                  <span class="text-xs text-gray-600">{(item.semanticScore * 100).toFixed(0)}%</span>
                </div>
                
                <div class="text-xs">
                  <span class="text-gray-500">Intent Match:</span>
                  <div class="w-20 bg-gray-200 rounded-full h-2 mt-1">
                    <div 
                      class="bg-green-600 h-2 rounded-full" 
                      style={`width: ${item.intentMatch * 100}%`}
                    ></div>
                  </div>
                  <span class="text-xs text-gray-600">{(item.intentMatch * 100).toFixed(0)}%</span>
                </div>
                
                <div class="text-xs">
                  <span class="text-gray-500">AI Readability:</span>
                  <div class="w-20 bg-gray-200 rounded-full h-2 mt-1">
                    <div 
                      class="bg-purple-600 h-2 rounded-full" 
                      style={`width: ${item.aiReadability * 100}%`}
                    ></div>
                  </div>
                  <span class="text-xs text-gray-600">{(item.aiReadability * 100).toFixed(0)}%</span>
                </div>
              </div>
            </div>
          )}
        </div>
        
        <div class="flex items-center justify-between pt-3 border-t border-gray-100">
          <div class="flex items-center space-x-4">
            <span class="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs">
              {item.category}
            </span>
            {item.aiOptimized && (
              <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs flex items-center">
                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
                AI Optimized
              </span>
            )}
          </div>
          
          <div class="flex space-x-2">
            <button class="text-blue-600 hover:text-blue-700 text-xs font-medium">
              Analyze
            </button>
            <button class="text-gray-600 hover:text-gray-700 text-xs font-medium">
              Optimize
            </button>
          </div>
        </div>
      </div>
    ))}
  </div>

  {showSemanticAnalysis && (
    <div class="mt-6 p-4 bg-gray-50 rounded-lg">
      <h4 class="text-sm font-semibold text-gray-900 mb-3">Semantic Analysis Summary</h4>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-xs">
        <div>
          <span class="text-gray-500">Average Semantic Score:</span>
          <span class="ml-2 font-medium text-gray-900">
            {((semanticAnalysis.reduce((sum, item) => sum + item.semanticScore, 0) / semanticAnalysis.length) * 100).toFixed(0)}%
          </span>
        </div>
        <div>
          <span class="text-gray-500">Intent Match Rate:</span>
          <span class="ml-2 font-medium text-gray-900">
            {((semanticAnalysis.reduce((sum, item) => sum + item.intentMatch, 0) / semanticAnalysis.length) * 100).toFixed(0)}%
          </span>
        </div>
        <div>
          <span class="text-gray-500">AI Readability:</span>
          <span class="ml-2 font-medium text-gray-900">
            {((semanticAnalysis.reduce((sum, item) => sum + item.aiReadability, 0) / semanticAnalysis.length) * 100).toFixed(0)}%
          </span>
        </div>
      </div>
    </div>
  )}

  {enableAIProcessing && (
    <div class="mt-4 p-3 bg-blue-50 rounded-lg">
      <div class="flex items-center">
        <svg class="w-4 h-4 text-blue-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
        </svg>
        <span class="text-sm text-blue-700">
          Content optimized for AI search engines and generative AI systems
        </span>
      </div>
    </div>
  )}
</div>

<!-- Semantic Schema for AI Search -->
<script type="application/ld+json" set:html={JSON.stringify(semanticSchema)} />

<style>
  .semantic-embeddings {
    font-family: 'Inter', sans-serif;
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .5;
    }
  }
</style> 