---
// Navigation items with dropdowns
const navItems = [
  { href: '/', label: 'Home' },
  { 
    href: '/services', 
    label: 'Services',
    dropdown: [
      { href: '/services/web-development', label: 'Web Development' },
      { href: '/services/mobile-development', label: 'Mobile App Development' },
      { href: '/services/custom-software', label: 'Custom Software Solutions' },
      { href: '/services/ui-ux-design', label: 'UI/UX Design' },
      { href: '/services/saas-development', label: 'SaaS Development' },
      { href: '/services/crm-erp', label: 'CRM/ERP Development' },
      { href: '/services/image-tools', label: 'Image Post-Production Tools' }
    ]
  },
  { 
    href: '/products', 
    label: 'Products',
    dropdown: [
      { href: '/products/saas-platform', label: 'SaaS Platform' },
      { href: '/products/tools', label: 'Development Tools' },
      { href: '/products/coming-soon', label: 'Coming Soon' }
    ]
  },
  { 
    href: '/industries', 
    label: 'Industries',
    dropdown: [
      { href: '/industries/ecommerce', label: 'E-commerce' },
      { href: '/industries/real-estate', label: 'Real Estate' },
      { href: '/industries/healthcare', label: 'Healthcare' },
      { href: '/industries/education', label: 'Education' },
      { href: '/industries/logistics', label: 'Logistics' },
      { href: '/industries/media-entertainment', label: 'Media & Entertainment' }
    ]
  },
  { href: '/portfolio', label: 'Portfolio' },
  { 
    href: '/about', 
    label: 'About',
    dropdown: [
      { href: '/about/company', label: 'Company Overview' },
      { href: '/about/team', label: 'Our Team' },
      { href: '/about/careers', label: 'Careers' },
      { href: '/about/culture', label: 'Culture & Values' }
    ]
  },
  { href: '/blog', label: 'Blog' },
  { href: '/contact', label: 'Contact' }
];
---

<header class="fixed top-0 left-0 right-0 z-[9999] bg-secondary-950/80 backdrop-blur-md border-b border-secondary-800/50 shadow-lg" style="position: fixed !important; top: 0 !important; left: 0 !important; right: 0 !important; z-index: 9999 !important; width: 100% !important; display: block !important; visibility: visible !important; opacity: 1 !important;">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center space-x-2">
          <div class="w-8 h-8 bg-gradient-to-r from-primary-500 to-accent-500 rounded-lg flex items-center justify-center shadow-lg">
            <span class="text-white font-bold text-sm">EA</span>
          </div>
          <span class="text-xl font-bold bg-gradient-to-r from-primary-400 to-accent-400 bg-clip-text text-transparent">EA Soft Lab</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden lg:flex space-x-8">
        {navItems.map((item) => (
          <div class="relative group">
            <a
              href={item.href}
              class="text-secondary-300 hover:text-white px-3 py-2 text-sm font-medium transition-colors duration-200 flex items-center"
            >
              {item.label}
              {item.dropdown && (
                <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              )}
            </a>
            
            {item.dropdown && (
              <div class="absolute top-full left-0 mt-1 w-64 bg-secondary-800/95 backdrop-blur-md border border-secondary-700 rounded-lg shadow-xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-[999999]" style="z-index: 999999 !important; position: absolute !important;">
                <div class="py-2">
                  {item.dropdown.map((dropdownItem) => (
                    <a
                      href={dropdownItem.href}
                      class="block px-4 py-2 text-sm text-secondary-300 hover:bg-secondary-700/50 hover:text-white transition-colors duration-200"
                    >
                      {dropdownItem.label}
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        ))}
      </nav>

      <!-- CTA Button -->
      <div class="hidden lg:block">
        <a
          href="/contact"
          class="bg-gradient-to-r from-primary-500 to-accent-500 hover:from-primary-600 hover:to-accent-600 text-white px-6 py-2 rounded-lg text-sm font-medium transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
        >
          Get Started
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="lg:hidden">
        <button
          id="mobile-menu-button"
          class="text-secondary-300 hover:text-white p-2 rounded-lg hover:bg-secondary-800/50 transition-colors duration-200 touch-manipulation"
          aria-label="Toggle mobile menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden lg:hidden bg-secondary-900/95 backdrop-blur-md border-t border-secondary-700/50 shadow-lg">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
        {navItems.map((item) => (
          <div class="space-y-1">
            <a
              href={item.href}
              class="text-secondary-300 hover:text-white block px-3 py-2 text-base font-medium transition-colors duration-200"
            >
              {item.label}
            </a>
            {item.dropdown && (
              <div class="ml-4 space-y-1">
                {item.dropdown.map((dropdownItem) => (
                  <a
                    href={dropdownItem.href}
                    class="text-secondary-400 hover:text-white block px-3 py-1 text-sm transition-colors duration-200"
                  >
                    {dropdownItem.label}
                  </a>
                ))}
              </div>
            )}
          </div>
        ))}
        <a
          href="/contact"
          class="bg-gradient-to-r from-primary-500 to-accent-500 hover:from-primary-600 hover:to-accent-600 text-white block px-3 py-2 rounded-lg text-base font-medium transition-all duration-200 mt-4 shadow-lg"
        >
          Get Started
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu functionality
  function initMobileMenu() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    let isMenuOpen = false;

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function() {
        isMenuOpen = !isMenuOpen;
        
        if (isMenuOpen) {
          mobileMenu.classList.remove('hidden');
          mobileMenu.classList.add('block');
          // Change button to X icon
          mobileMenuButton.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          `;
        } else {
          mobileMenu.classList.remove('block');
          mobileMenu.classList.add('hidden');
          // Change button back to hamburger icon
          mobileMenuButton.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          `;
        }
      });

      // Close menu when clicking outside
      document.addEventListener('click', function(event) {
        if (!mobileMenuButton.contains(event.target) && !mobileMenu.contains(event.target)) {
          if (isMenuOpen) {
            mobileMenu.classList.remove('block');
            mobileMenu.classList.add('hidden');
            mobileMenuButton.innerHTML = `
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            `;
            isMenuOpen = false;
          }
        }
      });

      // Close menu when window is resized to desktop
      window.addEventListener('resize', function() {
        if (window.innerWidth >= 1024 && isMenuOpen) {
          mobileMenu.classList.remove('block');
          mobileMenu.classList.add('hidden');
          mobileMenuButton.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          `;
          isMenuOpen = false;
        }
      });
    }
  }

  // Ensure header always stays visible
  function ensureHeaderVisible() {
    const header = document.querySelector('header');
    if (header) {
      header.style.position = 'fixed';
      header.style.top = '0';
      header.style.left = '0';
      header.style.right = '0';
      header.style.zIndex = '9999';
      header.style.display = 'block';
      header.style.visibility = 'visible';
      header.style.opacity = '1';
      header.style.width = '100%';
      header.style.pointerEvents = 'auto';
    }
  }

  // Ensure dropdowns are always on top
  function ensureDropdownsOnTop() {
    const dropdowns = document.querySelectorAll('header nav div[class*="absolute"]');
    dropdowns.forEach(dropdown => {
      dropdown.style.zIndex = '999999';
      dropdown.style.position = 'absolute';
      dropdown.style.pointerEvents = 'auto';
    });
  }

  // Run on page load
  document.addEventListener('DOMContentLoaded', function() {
    initMobileMenu();
    ensureHeaderVisible();
    ensureDropdownsOnTop();
  });

  // Run on window load
  window.addEventListener('load', function() {
    initMobileMenu();
    ensureHeaderVisible();
    ensureDropdownsOnTop();
  });

  // Run periodically to ensure dropdowns stay on top
  setInterval(function() {
    ensureDropdownsOnTop();
  }, 100);
</script> 