---
// Navigation items with dropdowns
const navItems = [
  { href: '/', label: 'Home' },
  { 
    href: '/services', 
    label: 'Services',
    dropdown: [
      { href: '/services/web-development', label: 'Web Development' },
      { href: '/services/mobile-development', label: 'Mobile App Development' },
      { href: '/services/custom-software', label: 'Custom Software Solutions' },
      { href: '/services/ui-ux-design', label: 'UI/UX Design' },
      { href: '/services/saas-development', label: 'SaaS Development' },
      { href: '/services/crm-erp', label: 'CRM/ERP Development' },
      { href: '/services/image-tools', label: 'Image Post-Production Tools' }
    ]
  },
  { 
    href: '/products', 
    label: 'Products',
    dropdown: [
      { href: '/products/saas-platform', label: 'SaaS Platform' },
      { href: '/products/tools', label: 'Development Tools' },
      { href: '/products/coming-soon', label: 'Coming Soon' }
    ]
  },
  { 
    href: '/industries', 
    label: 'Industries',
    dropdown: [
      { href: '/industries/ecommerce', label: 'E-commerce' },
      { href: '/industries/real-estate', label: 'Real Estate' },
      { href: '/industries/healthcare', label: 'Healthcare' },
      { href: '/industries/education', label: 'Education' },
      { href: '/industries/logistics', label: 'Logistics' },
      { href: '/industries/media-entertainment', label: 'Media & Entertainment' }
    ]
  },
  { href: '/portfolio', label: 'Portfolio' },
  { 
    href: '/about', 
    label: 'About',
    dropdown: [
      { href: '/about/company', label: 'Company Overview' },
      { href: '/about/team', label: 'Our Team' },
      { href: '/about/careers', label: 'Careers' },
      { href: '/about/culture', label: 'Culture & Values' }
    ]
  },
  { href: '/blog', label: 'Blog' },
  { href: '/contact', label: 'Contact' }
];
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-md border-b border-gray-200">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center space-x-2">
          <div class="w-8 h-8 bg-gradient-to-br from-primary-600 to-primary-800 rounded-lg flex items-center justify-center">
            <span class="text-white font-bold text-sm">EA</span>
          </div>
          <span class="text-xl font-bold text-gray-900">EA Soft Lab</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden lg:flex space-x-8">
        {navItems.map((item) => (
          <div class="relative group">
            <a
              href={item.href}
              class="text-gray-700 hover:text-primary-600 px-3 py-2 text-sm font-medium transition-colors duration-200 flex items-center"
            >
              {item.label}
              {item.dropdown && (
                <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              )}
            </a>
            
            {item.dropdown && (
              <div class="absolute top-full left-0 mt-1 w-64 bg-white border border-gray-200 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                <div class="py-2">
                  {item.dropdown.map((dropdownItem) => (
                    <a
                      href={dropdownItem.href}
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-primary-50 hover:text-primary-600 transition-colors duration-200"
                    >
                      {dropdownItem.label}
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        ))}
      </nav>

      <!-- CTA Button -->
      <div class="hidden lg:block">
        <a
          href="/contact"
          class="bg-primary-600 hover:bg-primary-700 text-white px-6 py-2 rounded-lg text-sm font-medium transition-colors duration-200"
        >
          Get Started
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="lg:hidden">
        <button
          id="mobile-menu-button"
          class="text-gray-700 hover:text-primary-600 p-2"
          aria-label="Toggle mobile menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden lg:hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t border-gray-200">
        {navItems.map((item) => (
          <div class="space-y-1">
            <a
              href={item.href}
              class="text-gray-700 hover:text-primary-600 block px-3 py-2 text-base font-medium transition-colors duration-200"
            >
              {item.label}
            </a>
            {item.dropdown && (
              <div class="ml-4 space-y-1">
                {item.dropdown.map((dropdownItem) => (
                  <a
                    href={dropdownItem.href}
                    class="text-gray-600 hover:text-primary-600 block px-3 py-1 text-sm transition-colors duration-200"
                  >
                    {dropdownItem.label}
                  </a>
                ))}
              </div>
            )}
          </div>
        ))}
        <a
          href="/contact"
          class="bg-primary-600 hover:bg-primary-700 text-white block px-3 py-2 rounded-lg text-base font-medium transition-colors duration-200 mt-4"
        >
          Get Started
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }

  // Close mobile menu when clicking on a link
  const mobileLinks = mobileMenu?.querySelectorAll('a');
  mobileLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
    });
  });
</script> 